{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/dialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","classes","dialogue","active","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"wOAIIA,EAA6B,SAACC,GAAD,MAAY,CAC5CC,OAAQD,EAAME,KAAKD,SAEPE,EAAmB,SAACC,GAAe,IACzCC,EADwC,4JAE7C,WACC,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eAHA,GACdC,IAAML,WAStC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCf1EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,SAAW,4B,oBCAnLD,EAAOC,QAAU,CAAC,QAAU,2B,8JCWbC,EARI,SAACN,GAChB,OACI,qBAAKO,UAAWC,IAAQC,SAAW,IAAMD,IAAQE,OAAjD,SACI,cAAC,IAAD,CAAST,GAAI,aAAeD,EAAMW,GAAlC,SAAuCX,EAAMY,U,kBCK1CC,EARC,SAACb,GACb,OACI,qBAAKO,UAAWC,IAAQM,QAAxB,SACKd,EAAMc,WC4BbC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAAClB,GACpB,OACI,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACI,cAACC,EAAA,EAAD,CACAC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,KACrB,8BACI,kDAODa,EA1CC,SAAC5B,GACb,IAAIP,EAAQO,EAAM6B,YAEdC,EAAkBrC,EAAMsC,QACvBC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAOrB,KAAsBD,GAAIsB,EAAOtB,IAAtBsB,EAAOtB,OAE1DuB,EAAmBzC,EAAM0C,SACxBH,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQH,OAKpE,OAAKX,EAAMN,OAEP,sBAAKa,UAAWC,IAAQuB,QAAxB,UACI,qBAAKxB,UAAWC,IAAQ4B,aAAxB,SACKN,IAEL,sBAAKvB,UAAWC,IAAQ2B,SAAxB,UACI,8BAAMD,IACN,cAACjB,EAAD,CAAqBG,SAXb,SAACiB,GACvBrC,EAAMsC,YAAYD,EAAOE,yBAEG,cAAC,IAAD,CAAUtC,GAAG,YCH5BuC,sBACdrC,aAbqB,SAACV,GACtB,MAAO,CACNoC,YAAapC,EAAMoC,gBAGI,SAACY,GACzB,MAAO,CACNH,YAAa,SAACC,GACbE,EAASC,YAAmBH,SAM9B3C,IAFc4C,CAGbZ","file":"static/js/4.1e49c4c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to='/Login' />\r\n\t\t\t\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\treturn ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3gkBh\",\"dialogsItems\":\"Dialogs_dialogsItems__3tQCj\",\"active\":\"Dialogs_active__3p29K\",\"dialogue\":\"Dialogs_dialogue__1nXcS\",\"messages\":\"Dialogs_messages__3U2tL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3PsDg\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialogue + ' ' + classes.active}>\r\n            <NavLink to={\"/dialogue/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Message.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/formsControls/formsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n\r\n    let messagesElements = state.messages\r\n        .map(message => <Message message={message.message} key={message.id} />);\r\n    \r\n    let addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody)\r\n    }\r\n    if (!props.isAuth) return <Redirect to=\"/Login\" />\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field \r\n            component={Textarea} \r\n            name=\"newMessageBody\" \r\n            placeholder='Enter your message'\r\n            validate={[required, maxLength50]}/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\nexport default Dialogs;","\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n}\r\nexport default compose(\r\n\tconnect(mapStateToProps,mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}