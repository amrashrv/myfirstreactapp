{"version":3,"sources":["pages/chat/chatPage.tsx"],"names":["Chat","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","Messages","AddMessageForm","messages","useSelector","state","chat","style","height","overflowY","map","m","index","Message","message","alt","src","photo","width","userName","useState","setMessage","onChange","e","currentTarget","value","onClick","sendMessage","type","ChatPage"],"mappings":"kMAgBMA,EAAiB,WACnB,IAAMC,EAAWC,cAQjB,OANAC,qBAAU,WAEN,OADAF,EAASG,eACF,WACHH,EAASI,kBAEd,IAEC,gCACI,cAACC,EAAD,IACA,cAACC,EAAD,QAIND,EAAqB,WACvB,IAAME,EAAWC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,YACjE,OACI,qBAAKI,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAA1C,SACKN,EAASO,KAAI,SAACC,EAAGC,GAAJ,OAAc,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAIhDC,EAAkD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvD,OACI,gCACI,qBAAKC,IAAI,GAAGC,IAAKF,EAAQG,MAAOC,MAAO,SAAU,4BAAIJ,EAAQK,WAC7D,uBAAOL,EAAQA,QAAQ,2BAI7BZ,EAA2B,WAAO,IAAD,EACLkB,mBAAS,IADJ,mBAC5BN,EAD4B,KACnBO,EADmB,OAEGD,mBAA8B,WAFjC,mBAG7BxB,GAH6B,UAGlBC,eAWjB,OACI,gCACI,8BACI,cAAC,IAAD,CAAUyB,SAAU,SAAAC,GAAC,OAAIF,EAAWE,EAAEC,cAAcC,QAAQA,MAAOX,MAEvE,8BACI,cAAC,IAAD,CAASY,QAfM,WACnBZ,IAGJlB,EAAS+B,YAAYb,IACrBO,EAAW,MAUmCO,KAAM,UAA5C,wBAODC,UAjEY,WACvB,OACI,cAAClC,EAAD","file":"static/js/6.31d9170c.chunk.js","sourcesContent":["import { Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ChatMessageType } from '../../api/chat';\r\nimport { sendMessage, startMessagesListening, stopMessagesListening } from '../../redux/chatReducer';\r\nimport { appStateType } from '../../redux/reduxStore';\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return (\r\n        <Chat />\r\n    )\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </div>\r\n    )\r\n}\r\nconst Messages: React.FC = () => {\r\n    const messages = useSelector((state: appStateType) => state.chat.messages)\r\n    return (\r\n        <div style={{ height: '400px', overflowY: 'auto' }}>\r\n            {messages.map((m, index) => <Message key={index} message={m} />)}\r\n        </div>\r\n    )\r\n}\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({ message }) => {\r\n    return (\r\n        <div>\r\n            <img alt='' src={message.photo} width={'30px'} /><b>{message.userName}</b>\r\n            <br />{message.message}<hr />\r\n        </div>\r\n    )\r\n}\r\nconst AddMessageForm: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const [readuStatus, setReaduStatus] = useState<'pending' | 'ready'>('pending')\r\n    const dispatch = useDispatch()\r\n\r\n    const sendMessageHandler = () => {\r\n        if(!message){\r\n            return \r\n        }\r\n        dispatch(sendMessage(message));\r\n        setMessage('')\r\n    }\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <div>\r\n                <TextArea onChange={e => setMessage(e.currentTarget.value)} value={message}></TextArea>\r\n            </div>\r\n            <div>\r\n                <Button  onClick={sendMessageHandler} type={'primary'}>Send</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChatPage;"],"sourceRoot":""}